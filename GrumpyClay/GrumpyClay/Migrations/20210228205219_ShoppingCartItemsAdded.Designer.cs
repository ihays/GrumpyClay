// <auto-generated />
using System;
using GrumpyClay.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GrumpyClay.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210228205219_ShoppingCartItemsAdded")]
    partial class ShoppingCartItemsAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GrumpyJen2.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Original"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Cartoon"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Video Game"
                        });
                });

            modelBuilder.Entity("GrumpyJen2.Models.Sculpture", b =>
                {
                    b.Property<int>("SculptureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSculptureOfTheWeek")
                        .HasColumnType("bit");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SculptureId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Sculptures");

                    b.HasData(
                        new
                        {
                            SculptureId = 1,
                            CategoryId = 3,
                            ImageThumbnailUrl = "https://i.etsystatic.com/27116147/r/il/39622e/2872265535/il_794xN.2872265535_r2ij.jpg",
                            ImageUrl = "https://i.etsystatic.com/27116147/r/il/39622e/2872265535/il_794xN.2872265535_r2ij.jpg",
                            InStock = true,
                            IsSculptureOfTheWeek = false,
                            LongDescription = "I created the sculpture by shaping clay, then I copied the clay sculpture into plastic. Next, I hand painted the plastic copy and added a protective coating to keep it looking nice. This sculpture was built to last!",
                            Name = "Handmade Sackboy",
                            Price = 65.00m,
                            ShortDescription = "Sackboy from Little Big Planet"
                        },
                        new
                        {
                            SculptureId = 2,
                            CategoryId = 2,
                            ImageThumbnailUrl = "https://i.etsystatic.com/27116147/r/il/08bb82/2864918839/il_794xN.2864918839_dxl2.jpg",
                            ImageUrl = "https://i.etsystatic.com/27116147/r/il/08bb82/2864918839/il_794xN.2864918839_dxl2.jpg",
                            InStock = true,
                            IsSculptureOfTheWeek = false,
                            LongDescription = "Apple inspired by Snow White and the Seven Dwarves. Don’t eat it! ;)",
                            Name = "Poison Apple",
                            Price = 15.00m,
                            ShortDescription = "Apple inspired by Snow White and the Seven Dwarves"
                        },
                        new
                        {
                            SculptureId = 3,
                            CategoryId = 1,
                            ImageThumbnailUrl = "https://i.etsystatic.com/27116147/r/il/27a5b5/2928270607/il_794xN.2928270607_5jlb.jpg",
                            ImageUrl = "https://i.etsystatic.com/27116147/r/il/27a5b5/2928270607/il_794xN.2928270607_5jlb.jpg",
                            InStock = true,
                            IsSculptureOfTheWeek = true,
                            LongDescription = "Made from high quality resin and hand painted.",
                            Name = "Tentacle Holding a Rose",
                            Price = 30.00m,
                            ShortDescription = "Original tentacle holding a rose"
                        });
                });

            modelBuilder.Entity("GrumpyJen2.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("ShoppingCartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("SculptureId")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShoppingCartItemId");

                    b.HasIndex("SculptureId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("GrumpyJen2.Models.Sculpture", b =>
                {
                    b.HasOne("GrumpyJen2.Models.Category", "Category")
                        .WithMany("Sculptures")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GrumpyJen2.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("GrumpyJen2.Models.Sculpture", "Sculpture")
                        .WithMany()
                        .HasForeignKey("SculptureId");

                    b.Navigation("Sculpture");
                });

            modelBuilder.Entity("GrumpyJen2.Models.Category", b =>
                {
                    b.Navigation("Sculptures");
                });
#pragma warning restore 612, 618
        }
    }
}
